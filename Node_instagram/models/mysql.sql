DROP TABLE IF EXISTS node.PostHashtag;
DROP TABLE IF EXISTS node.Comment;
DROP TABLE IF EXISTS node.DM;
DROP TABLE IF EXISTS node.Room;
DROP TABLE IF EXISTS  node.Good;
DROP TABLE IF EXISTS node.Follow;
DROP TABLE IF EXISTS  node.Domain;
DROP TABLE IF EXISTS node.Hashtag;
DROP TABLE IF EXISTS node.Post;
DROP TABLE IF EXISTS node.User;

CREATE TABLE node.User (
id INT NOT NULL AUTO_INCREMENT,
email VARCHAR(40),
nick VARCHAR(20) NOT NULL UNIQUE,
password VARCHAR(100),
provider VARCHAR(10) NOT NULL DEFAULT 'local',
snsId  VARCHAR(30),
img VARCHAR(200) NOT NULL UNIQUE,
PRIMARY KEY(id),
UNIQUE INDEX emailIdx (email ASC)
)
DEFAULT CHARACTER SET = utf8
ENGINE = InnoDB;

CREATE TABLE node.Post (
id INT NOT NULL AUTO_INCREMENT,
userId INT NOT NULL,
userNick VARCHAR(20) NOT NULL,
userImg VARCHAR(200) NOT NULL,
img VARCHAR(200),
date TIMESTAMP DEFAULT NOW(),
PRIMARY KEY(id),
INDEX userIdx (userId ASC),
CONSTRAINT postUserId FOREIGN KEY (userId) REFERENCES node.User (id) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT postUserNick FOREIGN KEY (userNick) REFERENCES node.User (nick) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT postUserImg FOREIGN KEY (userImg) REFERENCES node.User (img) ON DELETE CASCADE ON UPDATE CASCADE)
DEFAULT CHARACTER SET = utf8
ENGINE = InnoDB;

CREATE TABLE node.Hashtag (
id INT NOT NULL AUTO_INCREMENT,
title VARCHAR(100) NOT NULL UNIQUE,
PRIMARY KEY(id))
DEFAULT CHARACTER SET = utf8
ENGINE = InnoDB;

CREATE TABLE node.Domain (
id INT NOT NULL AUTO_INCREMENT,
userId INT NOT NULL,
userNick VARCHAR(20) NOT NULL,
host VARCHAR(80) NOT NULL,
type TINYINT NOT NULL,
clientSecret VARCHAR(37) NOT NULL,
PRIMARY KEY(id),
CONSTRAINT domainUserId FOREIGN KEY (userId) REFERENCES node.User (id) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT domainUserNick FOREIGN KEY (userNick) REFERENCES node.User (nick) ON DELETE CASCADE ON UPDATE CASCADE)
DEFAULT CHARACTER SET = utf8
ENGINE = InnoDB;

CREATE TABLE node.Follow (
followingId INT NOT NULL,
followingNick VARCHAR(20) NOT NULL,
followingimg VARCHAR(200) NOT NULL,
followerId INT NOT NULL,
followerNick VARCHAR(20) NOT NULL,
followerimg VARCHAR(200) NOT NULL,
CONSTRAINT followingId FOREIGN KEY (followingId) REFERENCES node.User (id) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT followerId FOREIGN KEY (followerId) REFERENCES node.User (id) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT followingNick FOREIGN KEY (followingNick) REFERENCES node.User (nick) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT followingimg FOREIGN KEY (followingimg) REFERENCES node.User (img) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT followerNick FOREIGN KEY (followerNick) REFERENCES node.User (nick) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT followerimg FOREIGN KEY (followerimg) REFERENCES node.User (img) ON DELETE CASCADE ON UPDATE CASCADE)
DEFAULT CHARACTER SET = utf8
ENGINE = InnoDB;

CREATE TABLE node.Good (
userId INT NOT NULL,
postId INT NOT NULL,
CONSTRAINT goodUserId FOREIGN KEY (userId) REFERENCES node.User (id) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT goodPostId FOREIGN KEY (postId) REFERENCES node.Post (id) ON DELETE CASCADE ON UPDATE CASCADE)
DEFAULT CHARACTER SET = utf8
ENGINE = InnoDB;


CREATE TABLE node.Room (
id INT NOT NULL AUTO_INCREMENT,
aId INT NOT NULL,
bId INT NOT NULL, 
PRIMARY KEY(id),
CONSTRAINT aId FOREIGN KEY (aId) REFERENCES node.User (id) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT bId FOREIGN KEY (bId) REFERENCES node.User (id) ON DELETE CASCADE ON UPDATE CASCADE)
DEFAULT CHARACTER SET = utf8
ENGINE = InnoDB;

CREATE TABLE node.DM (
id INT NOT NULL AUTO_INCREMENT,
roomId INT NOT NULL,
senderId INT NOT NULL,
chat VARCHAR(140) NOT NULL,
gif INT,
date TIMESTAMP DEFAULT NOW(),
PRIMARY KEY(id),
CONSTRAINT roomId FOREIGN KEY (roomId) REFERENCES node.Room (id) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT senderId FOREIGN KEY (senderId) REFERENCES node.User (id) ON DELETE CASCADE ON UPDATE CASCADE)
DEFAULT CHARACTER SET = utf8
ENGINE = InnoDB;


CREATE TABLE node.Comment (
id INT NOT NULL AUTO_INCREMENT,
userId INT NOT NULL,
userNick VARCHAR(20) NOT NULL,
userImg VARCHAR(200) NOT NULL,
postId INT NOT NULL,
content VARCHAR(140) NOT NULL,
date TIMESTAMP DEFAULT NOW(),
PRIMARY KEY(id),
CONSTRAINT CommentUserId FOREIGN KEY (userId) REFERENCES node.User (id) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT CommentUserNick FOREIGN KEY (userNick) REFERENCES node.User (nick) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT CommentUserImg FOREIGN KEY (userImg) REFERENCES node.User (img) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT CommentPostId FOREIGN KEY (postId) REFERENCES node.Post (id) ON DELETE CASCADE ON UPDATE CASCADE)
DEFAULT CHARACTER SET = utf8
ENGINE = InnoDB;

CREATE TABLE node.PostHashtag (
id INT NOT NULL AUTO_INCREMENT,
postId INT NOT NULL,
hashtagId INT NOT NULL, 
PRIMARY KEY(id),
CONSTRAINT postId FOREIGN KEY (postId) REFERENCES node.Post (id) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT hashtagId FOREIGN KEY (hashtagId) REFERENCES node.Hashtag (id) ON DELETE CASCADE ON UPDATE CASCADE)
DEFAULT CHARACTER SET = utf8
ENGINE = InnoDB;